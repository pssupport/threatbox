/*! normalize.css v3.0.3 | MIT License | github.com/necolas/normalize.css */img,legend{border:0}legend,td,th{padding:0}.footer:before,.nav__item.active:after{content:''}html{-ms-text-size-adjust:100%;-webkit-text-size-adjust:100%}body{margin:0}article,aside,details,figcaption,figure,footer,header,hgroup,main,menu,nav,section,summary{display:block}audio,canvas,progress,video{display:inline-block;vertical-align:baseline}audio:not([controls]){display:none;height:0}[hidden],template{display:none}a{background-color:transparent}a:active,a:hover{outline:0}abbr[title]{border-bottom:1px dotted}b,optgroup,strong{font-weight:700}dfn{font-style:italic}h1{font-size:2em;margin:.67em 0}mark{background:#ff0;color:#000}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}.table__nav,.table__wrapper{vertical-align:top;display:inline-block}sup{top:-.5em}sub{bottom:-.25em}svg:not(:root){overflow:hidden}figure{margin:1em 40px}hr{box-sizing:content-box;height:0}pre,textarea{overflow:auto}code,kbd,pre,samp{font-family:monospace,monospace;font-size:1em}button,input,optgroup,select,textarea{color:inherit;font:inherit;margin:0}button{overflow:visible}button,select{text-transform:none} input[type=reset],button,html input[type=button],input[type=submit]{-webkit-appearance:button;cursor:pointer}button[disabled],html input[disabled]{cursor:default}button::-moz-focus-inner,input::-moz-focus-inner{border:0;padding:0}input{line-height:normal}input[type=checkbox],input[type=radio]{box-sizing:border-box;padding:0}input[type=number]::-webkit-inner-spin-button,input[type=number]::-webkit-outer-spin-button{height:auto}input[type=search]{-webkit-appearance:textfield;box-sizing:content-box}input[type=search]::-webkit-search-cancel-button,input[type=search]::-webkit-search-decoration{-webkit-appearance:none}fieldset{border:1px solid silver;margin:0 2px;padding:.35em .625em .75em}legend{}table{border-collapse:collapse;border-spacing:0}.btn{background:#0067b0;color:#fff;font-weight:300;padding:7px 17px;border-radius:50px;display:inline-block;font-size:14px}.content__container{width:1170px;margin:0 auto}.content__title{color:#1a2329;font-size:44px;font-weight:300;margin:48px 0 0;letter-spacing:-1px}.content__subtitle{color:#1a2329;font-size:24px;letter-spacing:-.6px;font-weight:300;margin:2px 0 0 -2px}.content__table{font-size:0;padding:32px 0 0}.table__nav{width:220px}.table__nav__item{padding:20px 0}.table__wrapper{border-right:1px solid #f7dbd6;border-left:1px solid #f7dbd6}.table__header{font-size:14px;background:#f2f2f2}.table__header .table__item{color:rgba(0,0,0,.5)}.table__item{display:inline-block;font-size:14px;width:187.5px;color:#292f33;padding:13px 0 9px 15px}.table__string{border-bottom:1px solid #eaeaea}.nav__item{padding:13px 0 6px;position:relative;font-size:12px;text-transform:uppercase;letter-spacing:1px}.nav__item.active{color:#d64b32}.nav__item.active:after{position:absolute;height:1px;width:50%;left:50%;top:50%;background:#f7dbd6;margin:4px 0 0}.nav span{color:#8c9194}.overview .table__wrapper{width:950px}.table__left,.table__right,.table__row .table__string{width:50%;display:inline-block}.overview .table__header{font-size:0;background:#fbedea}.table__alert{font-size:14px;background:#d64b32;color:#fff;padding:9px 20px}.table__title{font-size:32px;color:#d64b32;font-weight:300;padding:0 0 5px}.table__subtitle{font-size:14px;color:#d64b32;opacity:.7}.table__right{vertical-align:middle;text-align:right;padding:0 31px 0 0}.table__left{vertical-align:middle;text-align:left;padding:14px 0 23px 21px}.table_btn{background-color:transparent;color:#d64b32;border:1px solid #d64b32;padding:7px 21px}.table__separator{font-size:24px;font-weight:300;color:#1a2329;padding:31px 0 14px 20px;letter-spacing:-.4px}.table__row{padding:0 0 0 30px;font-size:0}.table__row .table__string{vertical-align:top}.table__row .string__table{width:23%;vertical-align:top}.table__row .string__item{width:77%;vertical-align:top}.string__item,.string__table{display:inline-block;vertical-align:middle;font-size:14px}.string__table{color:#8c9194;text-align:left;min-width:105px;padding:9px 0 12px 19px}.string__item{color:#1a2329;padding:9px 0 12px}.http .table__wrapper{width:950px}.header__label,.table__url{width:345px;padding:13px 19px}.http .table__header{font-size:0;background:#fbedea}.header__label{font-size:14px;color:rgba(0,0,0,.5);display:inline-block;vertical-align:top}.table__settings,.table__url{color:#292f33;font-size:14px;display:inline-block;vertical-align:top}.table__settings{padding:14px 15px}.settings__type{padding:0 0 8px}.settings__length{padding:8px 0 31px}.settings__decode{padding:0 0 24px}*{padding:0;margin:0;box-sizing:border-box}body,html{height:100%;width:100%;font-family:Ubuntu,Arial,sans-serif}.header{width:100%;background:url(../../img/header__bg.png) center;height:64px}.header__container{width:1170px;height:100%;margin:0 auto;font-size:0}.header__logo{width:225px;height:29px;background:url(../../img/logo_white.png);float:left;margin:20px 0 0}.header__btn{float:right;margin:17px 22px 0}.footer{width:100%;position:relative;margin:20px 0 0}.footer:before{height:2px;width:100%;position:absolute;left:0;top:-2px;background:url(../../img/border_bottom.jpg) left}.footer__container{width:1170px;margin:0 auto}.footer__logo{width:225px;height:29px;background:url(../../img/logo_dark.png);float:left;margin:20px 0 0}.footer__link{float:right;margin:26px 0 0}.link{font-size:14px;color:#d64b32;text-decoration:none}
/*# sourceMappingURL=data:application/json;base64, */
